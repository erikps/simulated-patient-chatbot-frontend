import { React, Component, useState } from "react";
import { TextMessage } from "./TextMessage";

// Bot response(s) to a user input.
// Parse the response (a JSON object) generated by the RASA chatbot and
// return a list of responses such as texts, buttons, etc. that are ready to be displayed.
export function Response(props) {
  //action, sendMessageCallback, senderId) {
  let buttons = <></>;
  if (props.action?.buttons) {
    buttons = (
      <div className="bot-item d-inline-flex flex-row justify-content-start">
        {props.action.buttons.map(({ payload, title }) => (
          <ButtonResponse
            onClick={() => props.sendMessageCallback(payload)}
            title={title}
          />
        ))}
      </div>
    );
  }
  let score = <></>;
  if (props.action?.score) {
    score = (
      <div className="bot-response bot-item">
        <ScoreResponse score={props.action.score} />
      </div>
    );
  }
  let text = <></>;
  if (props.action?.text && props.action?.timestamp) {
    text = (
      <div className="bot-item">
        <BotIcon className="" />
        <div className="d-flex flex-row align-items-start justify-content-start">
          <TextMessage className="bot-response" text={props.action.text} />
          <div>
            <ReportButton
              senderId={props.senderId}
              timestamp={props.action.timestamp}
              isDisabled={props.isReportDisabled}
            />
          </div>
        </div>
      </div>
    );
  }
  return (
    <>
      {text}
      {score}
      {buttons}
    </>
  );
}

function BotIcon(props) {
  return (
    <img
      className={"bot-icon " + props.className}
      src="smart_toy_black_48dp.svg"
      alt="Bot icon"
      width="48px"
    />
  );
}

/**
 * Button to the side of each bot text response that lets the user report the bot's response so that it can be improved.
 */
function ReportButton(props) {
  const [pressed, setPressed] = useState(props.isDisabled);

  async function sendReport() {
    setPressed(true);

    try {
      const result = await fetch(
        process.env.REACT_APP_API_ENDPOINT +
          "report/" +
          props.senderId +
          "/" +
          props.timestamp,
        {
          method: "POST",
        }
      );
      if (!result.ok) setPressed(false);
    } catch {
      setPressed(false);
    }
  }

  return (
    <div className="">
      <button
        disabled={pressed}
        onClick={sendReport}
        className="btn btn-sm btn-outline-danger mx-1"
      >
        <b>REPORT</b>
      </button>
    </div>
  );
}

class ButtonResponse extends Component {
  render() {
    return (
      <input
        type="button"
        className="btn btn-primary me-2"
        onClick={() => this.props.onClick()}
        value={this.props.title}
      />
    );
  }
}

class ScoreResponse extends Component {
  render() {
    return (
      <div className="card">
        <div className="card-body d-flex align-items-center flex-column">
          <h5 className="card-title">Score</h5>
          <div className="card-text">
            <table className="table">
              <tbody>
                {this.props.score.individualScores.map(
                  ({ explanation, scoreAchieved, scorePossible }, index) => (
                    <tr key={index}>
                      <td>{explanation}</td>
                      <td>
                        {scoreAchieved}/{scorePossible}
                      </td>
                    </tr>
                  )
                )}
                <tr>
                  <td>Total Score</td>
                  <td>
                    {this.props.score.totalScore}/
                    {this.props.score.totalMaxScore}
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    );
  }
}

export default Response;
